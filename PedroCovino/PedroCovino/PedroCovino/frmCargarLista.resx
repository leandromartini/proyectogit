<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="FolderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABmUGAAVsBQAAcgAAAHYBABqSHgAalB8AF6AkABigJAAgpS4AIqMxACKrNAAprjwAKrRAAFeN
        SABfkE4AbJVWAGyWWABsmVsAbJldAHWYXQB1nWUAOMFSADzLWwBAxUsARMRNAEPIUQBFzFMAR9FaAEnU
        XgBM2WMATdtoAEveaQBP3m0AUNxtAFziewCVpnMAlKd0AMiMSwDMjkwAzpJRAMuSVgDMlFkA26FlANGh
        bQDYo2wA4ahrAOmxdwDrtHsAXuqBAF3uhABe9IsAaeuLAGnrjABq7IwAdeOLAHPnjQBy6I8AYfCJAGTw
        igB06ZEAeOiRAGH6kQBk/5cAlLCDAJSyhQCWtIkAt7KJALK0iADtt4AA8buDAIHllgCF5JgAiOaaAI/j
        ngCyxqYAt8muAJbjogCT5KEAmuamAKDkqQCl5a0AqOWvAK3mtQC057oA5cKfAPzJlgD/zpsA3canANzJ
        qQDcyawA5sOhAObEoQDmxaQA4c2zAOvTugDr1L4A/9KzAP/TtQD/1LcA/9W5AP/WvAD/2L0Au+rAALzo
        wQDc3c0A69bBAO3axgDt3sYA4d7PAPfZwgD+2cEA/9zCAPjaxwD/3MUA/97JAP/fzAD439EAw+vHAMTs
        yADK7MwA3eHSANLw1AD/4MoA/uHNAP/i0AD/5NEA/+XVAPbl2AD/59kA/+jaAP/q3QD/7N8A/+vgAP7s
        4QD/7uQA4/bmAO3x5QDt+u8A//DmAP/x6QD/9OsA/vLtAP/07gDv+vAA//PwAP/18QD+9vQA//jzAP/4
        9QD/+vgA//z6AP/+/gD/ijEA/51RAP+vcQD/wZEA/9KxAP/l0QD///8AAAAAAC8DAABQBAAAcAYAAJAJ
        AACwCgAAzwwAAPAOAAD/IBIA/z4xAP9cUQD/enEA/5eRAP+2sQD/1NEA////AAAAAAAvAA4AUAAXAHAA
        IQCQACsAsAA2AM8AQADwAEkA/xFaAP8xcAD/UYYA/3GcAP+RsgD/scgA/9HfAP///wAAAAAALwAgAFAA
        NgBwAEwAkABiALAAeADPAI4A8ACkAP8RswD/Mb4A/1HHAP9x0QD/kdwA/7HlAP/R8AD///8AAAAAACwA
        LwBLAFAAaQBwAIcAkAClALAAxADPAOEA8ADwEf8A8jH/APRR/wD2cf8A95H/APmx/wD70f8A////AAAA
        AAAbAC8ALQBQAD8AcABSAJAAYwCwAHYAzwCIAPAAmRH/AKYx/wC0Uf8AwnH/AM+R/wDcsf8A69H/AP//
        /wAAAAAACAAvAA4AUAAVAHAAGwCQACEAsAAmAM8ALADwAD4R/wBYMf8AcVH/AIxx/wCmkf8Av7H/ANrR
        /wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAmJiYmJiYmJiYmJiYmJiYmJiYmJiYmKgAAAAAAAAAAACaVkpKSkpKSkpKSkpKS
        kpKRkZGRkZImAAAAAAAAAAAAJpN8fXxsdHR0dHNzc3NzcnJycnKDkSYAAAAAAAAAAAAmlW9vWANDZmZl
        ZWVkZGRjY2JiYYGRJgAAAAAAAAAAACaVcnJZBAhEb29vZmZmZmVlZGRjgpEmAAAAAAAAAAAAJpVzc1oE
        IAUkcHBwb2ZmZmZmZWSDkiYAAAAAAAAAAAAmlnt0XgQ9Iwslb3JwcnBwb29mZoOSJgAAAAAAAwEBAQEB
        AQECCTg9MQolc3NycnBycHBmg5MmAAAAAAAEGRgaGxwdHh8iNz08Mg0UbnNzc3NycnCGlSYAAAAAAASI
        eGhUUlBNSkhHPTk2OgwQe3t7c3NzcoaTJgAAAAAABJB6d2dTUU9OSUc9OTU7PhcRcX10dHt7h5UmAAAA
        AAAEinp2Z1NRT05JRz05NDozPxYPfX19fXuHlSYAAAAAAASKenZnU1FPTklHPTk0OjM/Fg5/f35+fYuW
        JgAAAAAABJB6d2dTUU9OSUc9OTQ7PhcSdX9/f39+i5YmAAAAAAAEiHhoVFJQTUpIRz05NjoME4OBgoGB
        f3+MliYAAAAAAAQZGBobHB0eHyI3PTwyDRWAg4OCg4GCgY2WJgAAAAAAAQEBAQEBAQECCTg9MQpAh4eG
        hIWEg4OCjpYmAAAAAAAAAAAAJpiNjW0EPSMLQYaHh4eHhoSEhYOPlyYAAAAAAAAAAAAmn4+PaQQhBkKN
        jIyLi4eLh4eHho+XJgAAAAAAAAAAACaflJJpBAdLjo2NjI2MjIuLh4uHkpcmAAAAAAAAAAAAJp+VlXkD
        TJKSko+Pj46NjYyMjIuUlyYAAAAAAAAAAAAmn5aWk4mVlZOUkpKSko+Pj4+Pj5afJgAAAAAAAAAAACaf
        l5eXl5aWlpaUlZOUkpSAVVxbXV0sAAAAAAAAAAAAJp+YmJeXl5aXlpaVlpWVlV8uRkZFKAAAAAAAAAAA
        AAAmn5+fn5+YmJiXl5eXlpaWYDBXVi0AAAAAAAAAAAAAACafn5+fn5+fmJiYmJeXl5dgMFYrAAAAAAAA
        AAAAAAAAJp+fn5+fn5+fn5+fn5iYn2ovLQAAAAAAAAAAAAAAAAApn5+fn5+fn5+fn5+fn5+faycAAAAA
        AAAAAAAAAAAAACwmJiYmJiYmJiYmJiYmJiYsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//////////8AAAH/AAAB/wAAAf8AAAH/AAAB/wAAAf8AAAHwAAAB8AAAAfAAAAHwAA
        AB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB/wAAAf8AAAH/AAAB/wAAAf8AAAH/AAAB/wAAA/8AAAf/AA
        AP/wAAH/8AAD//AAB///////
</value>
  </data>
</root>